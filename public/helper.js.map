{"version":3,"sources":["../src/helper.js"],"names":["calcInitialState","num","calcReducer","state","action","type","listInitialState","list","listReducer","concat","item","filter","index","middleware1","getState","finalDispatchFn","console","log","returnValue","beforeDispatchFn","middleware2"],"mappings":";;;;;AAAA,IAAMA,mBAAmB;AACxBC,MAAK;AADmB,CAAzB;;AAIO,IAAMC,oCAAc,SAAdA,WAAc,GAAsC;AAAA,KAArCC,KAAqC,uEAA7BH,gBAA6B;AAAA,KAAXI,MAAW;;AAChE,SAAQA,OAAOC,IAAf;AACC,OAAK,UAAL;AACC,UAAO,EAAEJ,KAAKE,MAAMF,GAAN,GAAY,CAAnB,EAAP;AACD,OAAK,UAAL;AACC,UAAO,EAAEA,KAAKE,MAAMF,GAAN,GAAY,CAAnB,EAAP;AACD;AACC,UAAOE,KAAP;AANF;AAQA,CATM;;AAWP,IAAMG,mBAAmB;AACxBC,OAAM;AADkB,CAAzB;;AAIO,IAAMC,oCAAc,SAAdA,WAAc,GAAsC;AAAA,KAArCL,KAAqC,uEAA7BG,gBAA6B;AAAA,KAAXF,MAAW;;AAChE,SAAQA,OAAOC,IAAf;AACC,OAAK,KAAL;AACC,UAAO,EAAEE,MAAMJ,MAAMI,IAAN,CAAWE,MAAX,CAAkBL,OAAOM,IAAzB,CAAR,EAAP;AACD,OAAK,QAAL;AACC,UAAO,EAAEH,MAAMJ,MAAMI,IAAN,CAAWI,MAAX,CAAkB,UAACD,IAAD,EAAOE,KAAP;AAAA,YAAiBA,UAAUR,OAAOQ,KAAlC;AAAA,KAAlB,CAAR,EAAP;AACD;AACC,UAAOT,KAAP;AANF;AAQA,CATM;;AAWA,IAAMU,oCAAc,SAAdA,WAAc,OAAkB;AAAA,KAAfC,QAAe,QAAfA,QAAe;;AAC5C,QAAO,4BAAoB;AAC1B,SAAO,SAASC,eAAT,CAAyBX,MAAzB,EAAiC;AACvCY,WAAQC,GAAR,CAAY,gBAAZ,EAA8Bb,MAA9B;AACA,OAAMc,cAAcC,iBAAiBf,MAAjB,CAApB,CAA8C;AAC9CY,WAAQC,GAAR,CAAY,uBAAZ,EAAqCH,UAArC;AACA,UAAOI,WAAP;AACA,GALD;AAMA,EAPD;AAQA,CATM;;AAWA,IAAME,oCAAc,SAAdA,WAAc,QAAkB;AAAA,KAAfN,QAAe,SAAfA,QAAe;;AAC5C,QAAO,4BAAoB;AAC1B,SAAO,SAASC,eAAT,CAAyBX,MAAzB,EAAiC;AACvCY,WAAQC,GAAR,CAAY,gBAAZ,EAA8Bb,MAA9B;AACA,OAAMc,cAAcC,iBAAiBf,MAAjB,CAApB,CAA8C;AAC9CY,WAAQC,GAAR,CAAY,uBAAZ,EAAqCH,UAArC;AACA,UAAOI,WAAP;AACA,GALD;AAMA,EAPD;AAQA,CATM","file":"helper.js","sourcesContent":["const calcInitialState = {\n\tnum: 0,\n}\n\nexport const calcReducer = (state = calcInitialState, action) => {\n\tswitch (action.type) {\n\t\tcase 'INCREASE':\n\t\t\treturn { num: state.num + 1 };\n\t\tcase 'DECREASE':\n\t\t\treturn { num: state.num - 1 };\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nconst listInitialState = {\n\tlist: [],\n}\n\nexport const listReducer = (state = listInitialState, action) => {\n\tswitch (action.type) {\n\t\tcase 'ADD':\n\t\t\treturn { list: state.list.concat(action.item) };\n\t\tcase 'DELETE':\n\t\t\treturn { list: state.list.filter((item, index) => index !== action.index) };\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport const middleware1 = ({ getState }) => {\n\treturn beforeDispatchFn => {\n\t\treturn function finalDispatchFn(action) {\n\t\t\tconsole.log('will dispatch1', action)\n\t\t\tconst returnValue = beforeDispatchFn(action); ``\n\t\t\tconsole.log('state after dispatch1', getState())\n\t\t\treturn returnValue\n\t\t}\n\t};\n};\n\nexport const middleware2 = ({ getState }) => {\n\treturn beforeDispatchFn => {\n\t\treturn function finalDispatchFn(action) {\n\t\t\tconsole.log('will dispatch2', action)\n\t\t\tconst returnValue = beforeDispatchFn(action); ``\n\t\t\tconsole.log('state after dispatch2', getState())\n\t\t\treturn returnValue\n\t\t}\n\t};\n};\n"]}