{"version":3,"sources":["../src/index.js"],"names":["calcInitialState","num","calcReducer","state","action","type","listInitialState","list","listReducer","concat","item","filter","index","rootReducer","calc","store","undefined","logger","getState","finalDispatchFn","console","log","returnValue","beforeDispatchFn","dispatch"],"mappings":";;AAAA;;AAEA,IAAMA,mBAAmB;AACxBC,MAAK;AADmB,CAAzB;;AAIA,IAAMC,cAAc,SAAdA,WAAc,GAAsC;AAAA,KAArCC,KAAqC,uEAA7BH,gBAA6B;AAAA,KAAXI,MAAW;;AACzD,SAAQA,OAAOC,IAAf;AACC,OAAK,UAAL;AACC,UAAO,EAAEJ,KAAKE,MAAMF,GAAN,GAAY,CAAnB,EAAP;AACD,OAAK,UAAL;AACC,UAAO,EAAEA,KAAKE,MAAMF,GAAN,GAAY,CAAnB,EAAP;AACD;AACC,UAAOE,KAAP;AANF;AAQA,CATD;;AAWA,IAAMG,mBAAmB;AACxBC,OAAM;AADkB,CAAzB;;AAIA,IAAMC,cAAc,SAAdA,WAAc,GAAsC;AAAA,KAArCL,KAAqC,uEAA7BG,gBAA6B;AAAA,KAAXF,MAAW;;AACzD,SAAQA,OAAOC,IAAf;AACC,OAAK,KAAL;AACC,UAAO,EAAEE,MAAMJ,MAAMI,IAAN,CAAWE,MAAX,CAAkBL,OAAOM,IAAzB,CAAR,EAAP;AACD,OAAK,QAAL;AACC,UAAO,EAAEH,MAAMJ,MAAMI,IAAN,CAAWI,MAAX,CAAkB,UAACD,IAAD,EAAOE,KAAP;AAAA,YAAiBA,UAAUR,OAAOQ,KAAlC;AAAA,KAAlB,CAAR,EAAP;AACD;AACC,UAAOT,KAAP;AANF;AAQA,CATD;;AAWA,IAAMU,cAAc,4BAAgB;AACnCC,OAAMZ,WAD6B;AAEnCK,OAAMC;AAF6B,CAAhB,CAApB;;AAKA,IAAMO,QAAQ,wBAAYF,WAAZ,EAAyBG,SAAzB,EAAoC,4BACjD,SAASC,MAAT,OAA8B;AAAA,KAAZC,QAAY,QAAZA,QAAY;;AAC7B,QAAO,4BAAoB;AAC1B,SAAO,SAASC,eAAT,CAAyBf,MAAzB,EAAiC;AACvCgB,WAAQC,GAAR,CAAY,gBAAZ,EAA8BjB,MAA9B;AACA,OAAMkB,cAAcC,iBAAiBnB,MAAjB,CAApB,CAA8C;AAC9CgB,WAAQC,GAAR,CAAY,uBAAZ,EAAqCH,UAArC;AACA,UAAOI,WAAP;AACA,GALD;AAMA,EAPD;AAQA,CAVgD,EAWjD,SAASL,MAAT,QAA8B;AAAA,KAAZC,QAAY,SAAZA,QAAY;;AAC7B,QAAO,4BAAoB;AAC1B,SAAO,SAASC,eAAT,CAAyBf,MAAzB,EAAiC;AACvCgB,WAAQC,GAAR,CAAY,gBAAZ,EAA8BjB,MAA9B;AACA,OAAMkB,cAAcC,iBAAiBnB,MAAjB,CAApB,CAA8C;AAC9CgB,WAAQC,GAAR,CAAY,uBAAZ,EAAqCH,UAArC;AACA,UAAOI,WAAP;AACA,GALD;AAMA,EAPD;AAQA,CApBgD,CAApC,CAAd;;AAuBAP,MAAMS,QAAN,CAAe,EAAEnB,MAAM,UAAR,EAAf;AACAe,QAAQC,GAAR,CAAYN,MAAMG,QAAN,GAAiBJ,IAA7B,E,CAAoC","file":"index.js","sourcesContent":["import { applyMiddleware, createStore, combineReducers } from './redux';\n\nconst calcInitialState = {\n\tnum: 0,\n}\n\nconst calcReducer = (state = calcInitialState, action) => {\n\tswitch (action.type) {\n\t\tcase 'INCREASE':\n\t\t\treturn { num: state.num + 1 };\n\t\tcase 'DECREASE':\n\t\t\treturn { num: state.num - 1 };\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nconst listInitialState = {\n\tlist: [],\n}\n\nconst listReducer = (state = listInitialState, action) => {\n\tswitch (action.type) {\n\t\tcase 'ADD':\n\t\t\treturn { list: state.list.concat(action.item) };\n\t\tcase 'DELETE':\n\t\t\treturn { list: state.list.filter((item, index) => index !== action.index) };\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nconst rootReducer = combineReducers({\n\tcalc: calcReducer,\n\tlist: listReducer,\n});\n\nconst store = createStore(rootReducer, undefined, applyMiddleware(\n\tfunction logger({ getState }) {\n\t\treturn beforeDispatchFn => {\n\t\t\treturn function finalDispatchFn(action) {\n\t\t\t\tconsole.log('will dispatch1', action)\n\t\t\t\tconst returnValue = beforeDispatchFn(action); ``\n\t\t\t\tconsole.log('state after dispatch1', getState())\n\t\t\t\treturn returnValue\n\t\t\t}\n\t\t};\n\t},\n\tfunction logger({ getState }) {\n\t\treturn beforeDispatchFn => {\n\t\t\treturn function finalDispatchFn(action) {\n\t\t\t\tconsole.log('will dispatch2', action)\n\t\t\t\tconst returnValue = beforeDispatchFn(action); ``\n\t\t\t\tconsole.log('state after dispatch2', getState())\n\t\t\t\treturn returnValue\n\t\t\t}\n\t\t};\n\t}\n));\n\nstore.dispatch({ type: 'INCREASE' });\nconsole.log(store.getState().calc); // { num: 1 }\n"]}